{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\hp\\\\react-app-recipe-api\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\hp\\\\react-app-recipe-api\\\\src\\\\components\\\\dashboard\\\\Dashboard.js\";\nimport React, { Component } from 'react';\nimport { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\nimport './App.css';\nimport Recipe from './recipe';\n\nconst App = () => {\n  const APP_ID = 'a99bd604';\n  const APP_KEY = '801b3f6953e413a5d229de1043ba6dbd';\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        recipes = _useState2[0],\n        setRecipes = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        search = _useState4[0],\n        setSearch = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        query = _useState6[0],\n        setQuery = _useState6[1];\n\n  useEffect(() => {\n    const getRecipes = async () => {\n      const response = await fetch(\"https://api.edamam.com/search?q=\".concat(query, \"&app_id=\").concat(APP_ID, \"&app_key=\").concat(APP_KEY));\n      const data = await response.json();\n      setRecipes(data.hits);\n      console.log(data);\n    };\n\n    getRecipes();\n  }, [query]); // const getRecipes = async () => {\n  //   const response = await fetch(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`);\n  //   const data = await response.json();\n  //   setRecipes(data.hits);\n  // }\n\n  const updateSearch = e => {\n    setSearch(e.target.value);\n  };\n\n  const getSearch = e => {\n    e.preventDefault();\n    setQuery(search);\n    setSearch('');\n  };\n\n  class Dashboard extends Component {\n    render() {\n      const _this$props = this.props,\n            projects = _this$props.projects,\n            auth = _this$props.auth,\n            notifications = _this$props.notifications;\n      if (!auth.uid) return React.createElement(Redirect, {\n        to: \"/signin\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      });\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"app-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"10Recipes\"), React.createElement(\"p\", {\n        className: \"app-subtitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"A single page app to search for recipes.\"), React.createElement(\"form\", {\n        onSubmit: getSearch,\n        className: \"search-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"search-bar\",\n        type: \"text\",\n        value: search,\n        onChange: updateSearch,\n        placeholder: \"Enter an ingredient or a dish name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"search-button\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Search\")), React.createElement(\"div\", {\n        className: \"reciperesults\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, recipes.map(recipe => React.createElement(Recipe, {\n        key: recipe.recipe.label,\n        url: recipe.recipe.url,\n        title: recipe.recipe.label,\n        calories: recipe.recipe.calories,\n        image: recipe.recipe.image,\n        ingredients: recipe.recipe.ingredients,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }))));\n    }\n\n  }\n};","map":{"version":3,"sources":["C:\\Users\\hp\\react-app-recipe-api\\src\\components\\dashboard\\Dashboard.js"],"names":["React","Component","useEffect","useState","connect","compose","Redirect","Recipe","App","APP_ID","APP_KEY","recipes","setRecipes","search","setSearch","query","setQuery","getRecipes","response","fetch","data","json","hits","console","log","updateSearch","e","target","value","getSearch","preventDefault","Dashboard","render","props","projects","auth","notifications","uid","map","recipe","label","url","calories","image","ingredients"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport {useEffect, useState} from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport './App.css';\r\nimport Recipe from './recipe';\r\n\r\nconst App = () => {\r\n\r\n  const APP_ID = 'a99bd604';\r\n  const APP_KEY = '801b3f6953e413a5d229de1043ba6dbd';\r\n\r\n  const [recipes, setRecipes] = useState([]);\r\n  const [search, setSearch] = useState('');\r\n  const [query, setQuery] = useState('');\r\n\r\n  useEffect(() => {\r\n    const getRecipes = async () => {\r\n      const response = await fetch(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`);\r\n      const data = await response.json();\r\n      setRecipes(data.hits);\r\n      console.log(data);\r\n    }\r\n    getRecipes();\r\n  }, [query]);\r\n\r\n  // const getRecipes = async () => {\r\n  //   const response = await fetch(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`);\r\n  //   const data = await response.json();\r\n  //   setRecipes(data.hits);\r\n  // }\r\n\r\n  const updateSearch = e => {\r\n    setSearch(e.target.value);\r\n  }\r\n\r\n  const getSearch = e => {\r\n    e.preventDefault();\r\n    setQuery(search);\r\n    setSearch('');\r\n  }\r\n\r\n\r\nclass Dashboard extends Component {\r\n  render() {\r\n    const { projects, auth, notifications } = this.props;\r\n    if (!auth.uid) return <Redirect to='/signin' /> \r\n\r\n    return (\r\n        <div className=\"App\">\r\n          <h1 className=\"app-title\">10Recipes</h1>\r\n          <p className=\"app-subtitle\">A single page app to search for recipes.</p>\r\n          <form onSubmit={getSearch} className=\"search-form\">\r\n            <input className=\"search-bar\" type=\"text\" value={search} onChange={updateSearch} placeholder=\"Enter an ingredient or a dish name\" ></input>\r\n            <button className=\"search-button\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form>\r\n          <div className=\"reciperesults\">\r\n          {recipes.map(recipe => (\r\n            <Recipe \r\n            key={recipe.recipe.label}\r\n            url={recipe.recipe.url}\r\n            title={recipe.recipe.label} \r\n            calories={recipe.recipe.calories}\r\n            image={recipe.recipe.image}\r\n            ingredients={recipe.recipe.ingredients}></Recipe>\r\n          ))}\r\n          </div>\r\n        </div>\r\n      );\r\n\r\n  }\r\n}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}