{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\hp\\\\react-app-recipe-api\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport const SET_SNACKBAR = \"teamly/settings/SET_SNACKBAR\";\nconst initialState = {\n  snackbarOpen: false,\n  snackbarType: \"success\",\n  snackbarMessage: \"\"\n};\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case SET_SNACKBAR:\n      const snackbarOpen = action.snackbarOpen,\n            snackbarMessage = action.snackbarMessage,\n            snackbarType = action.snackbarType;\n      return _objectSpread({}, state, {\n        snackbarOpen,\n        snackbarType,\n        snackbarMessage\n      });\n\n    default:\n      return state;\n  }\n});\nexport const setSnackbar = (snackbarOpen, snackbarType = \"success\", snackbarMessage = \"\") => ({\n  type: SET_SNACKBAR,\n  snackbarOpen,\n  snackbarType,\n  snackbarMessage\n});","map":{"version":3,"sources":["C:\\Users\\hp\\react-app-recipe-api\\src\\store\\reducers\\snackbarReducer.js"],"names":["SET_SNACKBAR","initialState","snackbarOpen","snackbarType","snackbarMessage","state","action","type","setSnackbar"],"mappings":";;;;;;AAAA,OAAO,MAAMA,YAAY,GAAG,8BAArB;AAEP,MAAMC,YAAY,GAAG;AACnBC,EAAAA,YAAY,EAAE,KADK;AAEnBC,EAAAA,YAAY,EAAE,SAFK;AAGnBC,EAAAA,eAAe,EAAE;AAHE,CAArB;AAMA,gBAAe,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,YAAL;AAAA,YACUE,YADV,GAC0DI,MAD1D,CACUJ,YADV;AAAA,YACwBE,eADxB,GAC0DE,MAD1D,CACwBF,eADxB;AAAA,YACyCD,YADzC,GAC0DG,MAD1D,CACyCH,YADzC;AAEE,+BACKE,KADL;AAEEH,QAAAA,YAFF;AAGEC,QAAAA,YAHF;AAIEC,QAAAA;AAJF;;AAMF;AACE,aAAOC,KAAP;AAVJ;AAYD,CAbD;AAeA,OAAO,MAAMG,WAAW,GAAG,CACzBN,YADyB,EAEzBC,YAAY,GAAG,SAFU,EAGzBC,eAAe,GAAG,EAHO,MAIrB;AACJG,EAAAA,IAAI,EAAEP,YADF;AAEJE,EAAAA,YAFI;AAGJC,EAAAA,YAHI;AAIJC,EAAAA;AAJI,CAJqB,CAApB","sourcesContent":["export const SET_SNACKBAR = \"teamly/settings/SET_SNACKBAR\";\r\n\r\nconst initialState = {\r\n  snackbarOpen: false,\r\n  snackbarType: \"success\",\r\n  snackbarMessage: \"\"\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_SNACKBAR:\r\n      const { snackbarOpen, snackbarMessage, snackbarType } = action;\r\n      return {\r\n        ...state,\r\n        snackbarOpen,\r\n        snackbarType,\r\n        snackbarMessage\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setSnackbar = (\r\n  snackbarOpen,\r\n  snackbarType = \"success\",\r\n  snackbarMessage = \"\"\r\n) => ({\r\n  type: SET_SNACKBAR,\r\n  snackbarOpen,\r\n  snackbarType,\r\n  snackbarMessage\r\n});\r\n"]},"metadata":{},"sourceType":"module"}